# version of docker compose
version: '3.4'

# networks on which the services are going to run on
networks:
  dev:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.42.0/24"

services: # individual services
  write_api: # write API application
    depends_on: [ "postgres_db" ] # depends on the database service
    container_name: write_api
    build: # build the dockerfile inside this directory before starting it
      context: WriteApi
    environment: # environment vars for dynamic configuration (no need to hardcode anywhere else)
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=jQ^wxJeE@8x4sZ;Server=postgres_db;Port=5432;Database=eshop;IntegratedSecurity=true;
      - MongoDB__ConnectionStrings=mongodb://root:sduD2xnvZGLFCq@mongo_db:27017
      - MongoDB__DatabaseName=eshop
      - MongoDB__UserCollection=Users
      - MongoDB__ProductCollection=Products
      - ASPNETCORE_URLS=http://+:80
    networks:
      dev:
        ipv4_address: 192.168.42.2
        
  postgres_db: # write database
    image: postgres:latest # use the latest postgres image from dockerhub
    container_name: postgres_db
    environment: # environment vars for configuration of db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=jQ^wxJeE@8x4sZ
      - POSTGRES_DB=eshop
    restart: always # always restart in case of failure
    volumes: # store persistent data on the app_data volume
      - app_data:/var/lib/postgresql/data # physical location of the volume
    networks:
      dev:
        ipv4_address: 192.168.42.3
  
  read_api: # read API application
    depends_on: [ "mongo_db" ]
    container_name: read_api
    build:
      context: ReadApi
    environment: # environment vars for dynamic configuration (no need to hardcode anywhere else)
      - MongoDB__ConnectionStrings=mongodb://root:sduD2xnvZGLFCq@mongo_db:27017
      - MongoDB__DatabaseName=eshop
      - MongoDB__UserCollection=Users
      - MongoDB__ProductCollection=Products
      - ASPNETCORE_URLS=http://+:80
    networks:
      dev:
        ipv4_address: 192.168.42.4
  
  mongo_db: # database
    image: mongo:latest
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: sduD2xnvZGLFCq
    restart: always
    volumes:
        - app_data:/data/db
    networks: 
      dev:
        ipv4_address: 192.168.42.5

    
# volumes (actual local storage that will be used by containers for persistent data)
volumes:
  app_data:
